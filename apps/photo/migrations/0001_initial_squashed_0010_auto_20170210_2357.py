# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-02-11 07:13
from __future__ import unicode_literals

import apps.common.models
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.operations
from django.core.management import call_command
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


def load_fixture(apps, schema_editor):
    call_command('loaddata', 'categories', app_label='photo')
    call_command('loaddata', 'photo_feeds', app_label='photo')


class Migration(migrations.Migration):

    replaces = [('photo', '0001_initial'), ('photo', '0002_category_fixtures'), ('photo', '0003_photo_original_image_url'), ('photo', '0004_auto_20161216_1814'), ('photo', '0005_auto_20161222_1841'), ('photo', '0006_auto_20161223_0718'), ('photo', '0007_auto_20161224_1406'), ('photo', '0008_auto_20161227_1424'), ('photo', '0009_photo_gear'), ('photo', '0010_auto_20170210_2357')]

    dependencies = [
        ('account', '0009_user_gear'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribution_name', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(upload_to=apps.common.models.get_uploaded_file_path)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('photo_data', models.TextField(blank=True, null=True)),
                ('public', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhotoClassification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification_type', models.CharField(choices=[('category', 'Category'), ('tag', 'Tag')], default='tag', max_length=32)),
                ('name', models.CharField(max_length=64)),
                ('public', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhotoFeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('public', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='photo',
            name='category',
            field=models.ManyToManyField(related_name='category', to='photo.PhotoClassification'),
        ),
        migrations.AddField(
            model_name='photo',
            name='photo_feed',
            field=models.ManyToManyField(blank=True, to='photo.PhotoFeed'),
        ),
        migrations.AddField(
            model_name='photo',
            name='tag',
            field=models.ManyToManyField(blank=True, related_name='tag', to='photo.PhotoClassification'),
        ),
        migrations.AddField(
            model_name='photo',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='photo',
            name='original_image_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='photo',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='photo',
            name='modified_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterModelOptions(
            name='photo',
            options={'default_permissions': ('add', 'change', 'delete', 'view')},
        ),
        migrations.AlterModelOptions(
            name='photoclassification',
            options={'default_permissions': ('add', 'change', 'delete', 'view')},
        ),
        migrations.AlterModelOptions(
            name='photofeed',
            options={'default_permissions': ('add', 'change', 'delete', 'manage', 'view')},
        ),
        django.contrib.postgres.operations.CreateExtension(
            name='postgis',
        ),
        migrations.RemoveField(
            model_name='photo',
            name='modified_at',
        ),
        migrations.AddField(
            model_name='photo',
            name='coordinates',
            field=django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326),
        ),
        migrations.CreateModel(
            name='PhotoFeedPhoto',
            fields=[
            ],
            options={
                'verbose_name_plural': 'feed photos',
                'proxy': True,
                'verbose_name': 'feed photo',
            },
            bases=('photo.photo',),
        ),
        migrations.CreateModel(
            name='StarredPhoto',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('photo.photo',),
        ),
        migrations.AlterModelOptions(
            name='photofeed',
            options={'default_permissions': ('add', 'change', 'delete', 'manage', 'view'), 'verbose_name': 'feed', 'verbose_name_plural': 'feeds'},
        ),
        migrations.AddField(
            model_name='photo',
            name='gear',
            field=models.ManyToManyField(blank=True, to='account.Gear'),
        ),
        migrations.CreateModel(
            name='FlaggedPhoto',
            fields=[
            ],
            options={
                'verbose_name': 'flagged photo',
                'verbose_name_plural': 'flagged photos',
                'proxy': True,
            },
            bases=('photo.photo',),
        ),
        migrations.AddField(
            model_name='photofeed',
            name='photo_limit',
            field=models.IntegerField(blank=True, help_text='Leave blank for unlimited', null=True, verbose_name='max photos to display'),
        ),
        migrations.AddField(
            model_name='photofeed',
            name='randomize',
            field=models.BooleanField(default=False),
        ),
        migrations.RunPython(load_fixture),
    ]
